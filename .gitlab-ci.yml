image: docker:latest

variables:
  PACKAGE_VERSION: $VERSION

services:
  - docker:dind

stages:
  #- build
  - test
  #- release
  #- deploy

before_script:
  - apk add --update curl && rm -rf /var/cache/apk/*
  - echo $REGISTRY_PASSWORD | docker login -u $REGISTRY_USER --password-stdin $REGISTRY_URL

# build:
#   stage: build
#   except:
#     - tags
#   script: #${REGISTRY}/${LOGIN}/react-app:latest - $CI_COMMIT_SHORT_SHA $IMAGE_TAG
#     - docker --log-level=debug build --pull --file=gateway/docker/production/nginx/Dockerfile --tag=$REGISTRY_URL/$REGISTRY_USER/auction-gateway:$CI_COMMIT_SHORT_SHA gateway
#     - docker --log-level=debug build --pull --file=gateway/docker/production/nginx/Dockerfile --tag=$REGISTRY_URL/$REGISTRY_USER/auction-gateway:latest gateway
#     - docker --log-level=debug build --pull --file=frontend/docker/production/nginx/Dockerfile --tag=$REGISTRY_URL/$REGISTRY_USER/auction-frontend:$CI_COMMIT_SHORT_SHA frontend
#     - docker --log-level=debug build --pull --file=frontend/docker/production/nginx/Dockerfile --tag=$REGISTRY_URL/$REGISTRY_USER/auction-frontend:latest frontend
#     - docker --log-level=debug build --pull --file=api/docker/production/Dockerfile --tag=$REGISTRY_URL/$REGISTRY_USER/auction-api:$CI_COMMIT_SHORT_SHA api
#     - docker --log-level=debug build --pull --file=api/docker/production/Dockerfile --tag=$REGISTRY_URL/$REGISTRY_USER/auction-api:latest api
#     - docker --log-level=debug build --pull --file=db/docker/production/Dockerfile --tag=$REGISTRY_URL/$REGISTRY_USER/auction-db:$CI_COMMIT_SHORT_SHA db
#     - docker --log-level=debug build --pull --file=db/docker/production/Dockerfile --tag=$REGISTRY_URL/$REGISTRY_USER/auction-db:latest db

#     - docker push $REGISTRY_URL/$REGISTRY_USER/auction-gateway:$CI_COMMIT_SHORT_SHA
#     - docker push $REGISTRY_URL/$REGISTRY_USER/auction-gateway:latest
#     - docker push $REGISTRY_URL/$REGISTRY_USER/auction-frontend:$CI_COMMIT_SHORT_SHA
#     - docker push $REGISTRY_URL/$REGISTRY_USER/auction-frontend:latest
#     - docker push $REGISTRY_URL/$REGISTRY_USER/auction-api:$CI_COMMIT_SHORT_SHA
#     - docker push $REGISTRY_URL/$REGISTRY_USER/auction-api:latest
#     - docker push $REGISTRY_URL/$REGISTRY_USER/auction-db:$CI_COMMIT_SHORT_SHA
#     - docker push $REGISTRY_URL/$REGISTRY_USER/auction-db:latest

test:
  stage: test
  # except:
  #   - tags
  script:
    - echo "VERSION - $VERSION PACKAGE_VERSION - $PACKAGE_VERSION $PRIVATE_TOKEN"
    - 'curl --request PUT --header "PRIVATE-TOKEN: $PRIVATE_TOKEN" "https://gitlab.example.com/api/v4/projects/28552814/variables/VERSION" --form "value=v0.1.432"'
    - echo "VERSION - $VERSION PACKAGE_VERSION - $PACKAGE_VERSION $PRIVATE_TOKEN"
    - echo "Fake test is OK üëçüëç"

# release:
#    stage: release
#    only:
#      - tags # –£—Å–ª–æ–≤–∏–µ –∑–∞–ø—É—Å–∫–∞ Job - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –º–µ—Ç–∫–∞ Git
#    script:
#      - docker pull gcr.io/cd-k8s-236617/user-2-ui:$CI_COMMIT_SHORT_SHA
#      - docker tag gcr.io/cd-k8s-236617/user-2-ui:$CI_COMMIT_SHORT_SHA gcr.io/cd-k8s-236617/user-2-ui:$CI_COMMIT_TAG
#      - docker push gcr.io/cd-k8s-236617/user-2-ui:$CI_COMMIT_TAG

# deploy:
#   stage: deploy
#   script: # –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–æ–¥–∫–ª –ø–æ 22 –ø–æ—Ä—Ç—É ssh
#     - ssh -o StrictHostKeyChecking=no deploy@$HOST -p $PORT 'rm -rf site_$CI_COMMIT_SHORT_SHA'
#     - ssh -o StrictHostKeyChecking=no deploy@$HOST -p $PORT 'mkdir site_$CI_COMMIT_SHORT_SHA'
#     - envsubst < docker-compose-production.yml > docker-compose-production-env.yml
#     - scp -o StrictHostKeyChecking=no -P ${PORT} docker-compose-production-env.yml deploy@${HOST}:site_$CI_COMMIT_SHORT_SHA/docker-compose.yml
#     - rm -f docker-compose-production-env.yml
#     - ssh -o StrictHostKeyChecking=no deploy@$HOST -p $PORT 'mkdir site_$CI_COMMIT_SHORT_SHA/secrets'
#     - ssh -o StrictHostKeyChecking=no deploy@$HOST -p $PORT 'cd site_$CI_COMMIT_SHORT_SHA && docker stack deploy --compose-file docker-compose.yml auction --with-registry-auth --prune'

    # - apk add -U openssl curl tar gzip bash ca-certificates git
    # - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    # - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    # - mkdir -p ~/.kube/ && echo $KUBE_CONFIG | base64 -d > ~/.kube/config
    # - kubectl cluster-info
    # - curl -L https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3  | bash
    # - helm upgrade ui -i chart/
