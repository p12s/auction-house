version: "3.8"
services:
    gateway:
        image: ${REGISTRY}/${LOGIN}/auction-gateway:${IMAGE_TAG}
        volumes:
            - /var/www/html:/var/www/html:ro
        ports:
            - "80:80"
            - "8080:8080"
            - "8081:8081"
            - "8082:8082"
        deploy:
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 10s
            placement:
                constraints: [node.role == manager]

    frontend:
        image: ${REGISTRY}/${LOGIN}/auction-frontend:${IMAGE_TAG}
        deploy:
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 10s

    api:
        image: ${REGISTRY}/${LOGIN}/auction-api:${IMAGE_TAG}
        environment:
            APP_ENV: dev
            APP_DEBUG: 1
            API_PORT: 8081
            SENTRY_DSN: ${SENTRY_DSN}
            POSTGRES_HOST: db
            POSTGRES_PASSWORD: qwerty
            POSTGRES_PORT: 5432
            POSTGRES_USER: postgres
            POSTGRES_DB: postgres
            POSTGRES_SSL_MODE: disable
            PGDATA: /var/lib/postgresql/data
            GIN_MODE: release
        volumes:
            - ./secrets:/run/secrets:ro
        deploy:
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 5s

    # db:
    #     image: ${REGISTRY}/${LOGIN}/auction-db:${IMAGE_TAG}
    #     environment:
    #         POSTGRES_PASSWORD: qwerty
    #         POSTGRES_USER: postgres
    #         POSTGRES_DB: postgres
    #     volumes:
    #         - db:/var/lib/postgresql/data
    #     ports:
    #         - "5432:5432"
    #     deploy:
    #         mode: replicated
    #         replicas: 1
    #         update_config:
    #             parallelism: 1
    #             delay: 5s

    # api-migration:
    #     image: ${REGISTRY}/auction-api-php-cli:${IMAGE_TAG}
    #     environment:
    #         APP_ENV: prod
    #         APP_DEBUG: 0
    #         DB_HOST: api-postgres
    #         DB_USER: app
    #         DB_PASSWORD: ${API_DB_PASSWORD}
    #         DB_NAME: app
    #         MAILER_HOST: ${API_MAILER_HOST}
    #         MAILER_PORT: ${API_MAILER_PORT}
    #         MAILER_USER: ${API_MAILER_USER}
    #         MAILER_PASSWORD: ${API_MAILER_PASSWORD}
    #         MAILER_ENCRYPTION: tls
    #         MAILER_FROM_EMAIL: ${API_MAILER_FROM_EMAIL}
    #         FRONTEND_URL: https://demo-auction.deworker.pro
    #         SENTRY_DSN: ${SENTRY_DSN}
    #         JWT_ENCRYPTION_KEY: ${JWT_ENCRYPTION_KEY}
    #         JWT_PUBLIC_KEY_PATH: /run/secrets/jwt_public_key
    #         JWT_PRIVATE_KEY_PATH: /run/secrets/jwt_private_key
    #     secrets:
    #         - jwt_public_key
    #         - jwt_private_key
    #     command: sh -c 'wait-for-it api-postgres:5432 -t 60 && php bin/app.php migrations:migrate --no-interaction' #  как сделать запуск миграций
    #     deploy:
    #         restart_policy:
    #             condition: on-failure
    #             delay: 5s
    #             max_attempts: 5
    #             window: 120s
    db:
        image: ${REGISTRY}/${LOGIN}/auction-db:${IMAGE_TAG}
        environment:
            POSTGRES_PASSWORD: qwerty
            POSTGRES_USER: postgres
            POSTGRES_DB: postgres
        volumes:
            - ./.database/postgres/data:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        deploy:
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 5s
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 5
                window: 120s
            placement:
                constraints: [node.role == manager]

#volumes:
#    db:

    #secrets:
#    sentry_dsn:
#        file: ./secrets/sentry_dsn.txt

